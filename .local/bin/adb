#!/bin/bash

# Copyright (C) 2019 Saalim Quadri <danascape@gmail.com>
# SPDX-License-Identifier: GPL-3.0-or-later

set -euo pipefail

# Path to real adb (adjust as needed)
ORIGINAL_CMD="/usr/bin/adb"

# Configuration
VERBOSE=
LOGFILE="$HOME/.adb_wrapper.log"

# Utilities
die()
{
	echo "ERROR: $*" >&2
	exit 1
}

do_cmd()
{
	if [[ -n "$VERBOSE" ]]; then
		echo "[WRAPPER] Running: $ORIGINAL_CMD $*" | tee -a "$LOGFILE"
	fi
	"$ORIGINAL_CMD" "$@"
}

usage()
{
	set +u
	echo
	case $1 in
		*)
			echo "usage: $0 [options] <command>"
			echo
			echo "A weird adb wrapper"
			echo
			echo "options:"
			echo "    -v	    Verbose (log commands to $LOGFILE)"
			echo "    -h		Show this help message"
			echo
			echo "commands:"
			echo "    i	    	Check APK path before install"
			echo "    r	    	Do adb root"
			echo "    sh		Launch shell"
			echo "    l 		View logs"
			echo "use $0 help <command> for more information about a command"
			echo
			echo "All other adb commands are forwarded directly."
			;;
	esac
	echo
}

while getopts ":vh" opt; do
	case "$opt" in
		v) VERBOSE=1 ;;
		h)
			usage
			exit 0
			;;
		*)
			usage
			exit 1
			;;
	esac
done
shift $((OPTIND - 1))

if [[ $# -eq 0 ]]; then
	usage
	exit 1
fi

# Subcommand
SUBCMD="$1"
shift

case "$SUBCMD" in
	d)
		do_cmd devices
		;;
	i)
		APK="$1"
		[[ -z "$APK" ]] && die "No APK provided to install"
		[[ ! -f "$APK" ]] && die "APK file not found: $APK"
		do_cmd install "$APK"
		;;
	r)
		do_cmd root
		;;
	sh)
		do_cmd shell "$@"
		;;
	l)
		do_cmd logcat "$@"
		;;
	*)
		# Fallback: pass through to adb
		do_cmd "$SUBCMD" "$@"
		;;
esac
